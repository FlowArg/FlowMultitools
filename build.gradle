plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'signing'
}

group = 'fr.flowarg'
version = '1.4.5'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Jar).configureEach {
    archiveBaseName.set("flowmultitools")
}

dependencies {
    api 'org.apache.commons:commons-compress:1.28.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.13.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            pom {
                groupId = project.group
                version = project.version
                artifactId = 'flowmultitools'
                name = project.name
                description = 'FlowMultitools is a tool-library for my projects'
                url = 'https://github.com/FlowArg/FlowMultitools'

                scm {
                    connection = 'scm:git:git://github.com/FlowArg/FlowMultitools.git'
                    developerConnection = 'scm:git:ssh://github.com:FlowArg/FlowMultitools.git'
                    url = 'http://github.com/FlowArg/FlowMultitools/tree/master'
                }

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'flowarg'
                        name = 'Flow Arg'
                        email = 'flow@flowarg.fr'
                    }
                }
            }
        }
    }
    
    repositories {
        maven {
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}

signing {
    def signingKey = System.getenv("GPG_PRIVATE_KEY")
    def signingPassword = System.getenv("GPG_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

test {
    useJUnitPlatform()
}
